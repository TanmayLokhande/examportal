package com.examportal.Controllers;

import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.examportal.Services.CategoryService;
import com.examportal.entities.exam.Category;
import com.examportal.payLoads.ApiResponse;

import lombok.Delegate;

@RestController
@RequestMapping("/category")
public class CategoryController {

	@Autowired
	private CategoryService categoryService;
	
	@PostMapping("/")
	public ResponseEntity<Category> addCategory(@RequestBody Category category){
		Category category2 = this.categoryService.addCategory(category);
		return new ResponseEntity<Category>(category2,HttpStatus.CREATED);
	}
	
	@GetMapping("/{catId}")
	public ResponseEntity<Category> getCategoryById(@PathVariable("catId") Long catId){
		Category category = this.categoryService.getCategory(catId);
		return new ResponseEntity<Category>(category,HttpStatus.OK);
	}
	
	@GetMapping("/")
	public ResponseEntity<Set<Category>> getAllCategories(){
		Set<Category> categories = this.categoryService.getCategories();
		return new ResponseEntity<Set<Category>>(categories,HttpStatus.OK);
	}
	
	@PutMapping("/")
	public ResponseEntity<Category> updateCategory(@RequestBody Category category){
		 Category updateCategory = this.categoryService.updateCategory(category);
		 return new ResponseEntity<Category>(updateCategory,HttpStatus.OK);
	}
	
	@DeleteMapping("/{catId}")
	public ResponseEntity<ApiResponse> deleteCategory(@PathVariable("catId") Long catId) {
		this.categoryService.deleteCategory(catId);
		ApiResponse apiResponse = new ApiResponse();
		apiResponse.setMessage("Category deleted successfully!!");
		apiResponse.setStatus(true);
		 return new ResponseEntity<ApiResponse>(apiResponse,HttpStatus.OK);
	}
	
}
